#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä –±–∞–∑–æ–≤–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è FIAS Public API

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏:
- –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞
- –ü–æ–∏—Å–∫ –∞–¥—Ä–µ—Å–æ–≤
- –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π –æ–±—ä–µ–∫—Ç–∞
"""

from fias_public_api import FiasPublicApi, get_token

def main():
    print("üöÄ FIAS Public API - –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è\n")

    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
        print("1. –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏...")
        token = get_token()
        print(f"‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: {token[:20]}...")

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
        print("\n2. –°–æ–∑–¥–∞–µ–º API –∫–ª–∏–µ–Ω—Ç...")
        api = FiasPublicApi(token)
        print("‚úÖ –ö–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω")

        # –ò—â–µ–º –∞–¥—Ä–µ—Å
        print("\n3. –ò—â–µ–º –∞–¥—Ä–µ—Å '–ú–æ—Å–∫–≤–∞, –ö—Ä–∞—Å–Ω–∞—è –ø–ª–æ—â–∞–¥—å'...")
        search_results = api.search("–ú–æ—Å–∫–≤–∞, –ö—Ä–∞—Å–Ω–∞—è –ø–ª–æ—â–∞–¥—å")
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {len(search_results)}")

        if search_results:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            first_result = search_results[0]
            print(f"\n4. –ü–µ—Ä–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:")
            print(f"   ID: {first_result.get('id', 'N/A')}")
            print(f"   –ê–¥—Ä–µ—Å: {first_result.get('address', 'N/A')}")
            print(f"   –¢–∏–ø: {first_result.get('type', 'N/A')}")

            # –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª–∏ –ø–æ ID
            if "id" in first_result:
                print(f"\n5. –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª–∏ –æ–±—ä–µ–∫—Ç–∞ {first_result['id']}...")
                try:
                    details = api.details(first_result["id"])
                    print("‚úÖ –î–µ—Ç–∞–ª–∏ –ø–æ–ª—É—á–µ–Ω—ã:")
                    for key, value in details.items():
                        if isinstance(value, (str, int, float, bool)) and value:
                            print(f"   {key}: {value}")
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–µ—Ç–∞–ª–µ–π: {e}")

        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –ø–æ–∏—Å–∫–∞
        print("\n6. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –ø–æ–∏—Å–∫–∞:")

        searches = ["–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥, –ù–µ–≤—Å–∫–∏–π –ø—Ä–æ—Å–ø–µ–∫—Ç", "–¢–≤–µ—Ä—Å–∫–∞—è —É–ª–∏—Ü–∞", "–ê—Ä–±–∞—Ç"]

        for search_query in searches:
            try:
                results = api.search(search_query)
                print(f"   '{search_query}': {len(results)} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
            except Exception as e:
                print(f"   '{search_query}': –æ—à–∏–±–∫–∞ - {e}")

    except Exception as e:
        print(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
        print("\nüí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ:")
        print("   - –£ –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É")
        print("   - –°–µ—Ä–≤–∏—Å –§–ò–ê–° –¥–æ—Å—Ç—É–ø–µ–Ω")
        print("   - –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")


if __name__ == "__main__":
    main()
